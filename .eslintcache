[{"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/App.js":"1","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Login.js":"2","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/ProductContainer.js":"3","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Search.js":"4","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/CartProduct.js":"5","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Checkout.js":"6","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/Cart.js":"7","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductPage.js":"8","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Confirmation.js":"9","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Signup.js":"10","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/index.js":"11","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductInfo.js":"12","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Product.js":"13","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/FilterByBrand.js":"14","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Header.js":"15"},{"size":597,"mtime":1606609594169,"results":"16","hashOfConfig":"17"},{"size":1171,"mtime":1606789072178,"results":"18","hashOfConfig":"17"},{"size":3460,"mtime":1606763339668,"results":"19","hashOfConfig":"17"},{"size":274,"mtime":1606521586908,"results":"20","hashOfConfig":"17"},{"size":2372,"mtime":1606774309374,"results":"21","hashOfConfig":"17"},{"size":4302,"mtime":1606863189781,"results":"22","hashOfConfig":"17"},{"size":2985,"mtime":1606851757749,"results":"23","hashOfConfig":"17"},{"size":8978,"mtime":1606863028347,"results":"24","hashOfConfig":"17"},{"size":609,"mtime":1606863447419,"results":"25","hashOfConfig":"17"},{"size":202,"mtime":1606337819985,"results":"26","hashOfConfig":"17"},{"size":500,"mtime":1606336510166,"results":"27","hashOfConfig":"17"},{"size":1017,"mtime":1606763339659,"results":"28","hashOfConfig":"17"},{"size":1831,"mtime":1606837802996,"results":"29","hashOfConfig":"17"},{"size":1010,"mtime":1606763339657,"results":"30","hashOfConfig":"17"},{"size":203,"mtime":1606340022217,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xac7ag",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/App.js",["70"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Login.js",[],["71","72"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/ProductContainer.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Search.js",[],["73","74"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/CartProduct.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Checkout.js",["75","76"],"import React from 'react'\nimport { Form, Button, Divider } from 'semantic-ui-react'\nimport { NavLink, Route, Switch, Redirect} from 'react-router-dom'\nimport Confirmation from './Confirmation'\n\n\nclass Checkout extends React.Component {\n\n    state = {\n        firstName: this.props.current_user.first_name,\n        lastName: this.props.current_user.last_name,\n        address: this.props.current_user.address,\n        address2: this.props.current_user.address2,\n        city: this.props.current_user.city,\n        state: this.props.current_user.state,\n        zipCode: this.props.current_user.zipcode,\n        email: this.props.current_user.email,\n        phone: \"\",\n        creditCardNum: \"\",\n        expiration: \"\",\n        ccv: \"\"\n    }\n\n    localOnChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    localSubmitHandler = (e) => {\n        e.preventDefault()\n        this.props.checkoutHandler(this.state)\n        // <Redirect to={\"/cart/checkout/confirmation\"}/>\n    }\n\n    \n  \n    render (){\n        console.log(this.props.current_user)\n        return(\n        \n            <>\n            <Switch>\n                <Route path=\"/cart/checkout/confirmation\" render={() => <Confirmation current_user={this.props.current_user} />}/>\n                <Route path=\"/cart/checkout\" render={() => {\n                    return(\n\n                        <>\n\n                <Form onSubmit={this.localSubmitHandler} action=\"/cart/checkout/\" >\n                    <h2>User Info:</h2>\n                    <Form.Group unstackable widths={2}>\n                        <Form.Input name=\"firstName\" label='First name' placeholder='First name' value={this.state.firstName} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"lastName\" label='Last name' placeholder='Last name' value={this.state.lastName} onChange={this.localOnChangeHandler}/>\n                    </Form.Group>\n\n                    <Form.Group unstackable widths={2}>\n                        <Form.Input name=\"address\" label='Address' placeholder='Address' value={this.state.address} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"address2\" label='Address 2' placeholder='Apt# (optionial)' value={this.state.address2} onChange={this.localOnChangeHandler}/>\n                    </Form.Group>\n\n                    <Form.Group unstackable widths=\"equal\">\n                        <Form.Input name=\"city\" label='City' placeholder='City' value={this.state.city} onChange={this.localOnChangeHandler} />\n                        <Form.Input name=\"state\" label='State' placeholder='State' value={this.state.state} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"zipCode\" label='Zip Code' placeholder='Zip Code' value={this.state.zipCode} onChange={this.localOnChangeHandler} />\n                    </Form.Group>\n\n                    <Form.Input name=\"email\" label='Email' placeholder='Email' value={this.state.email} onChange={this.localOnChangeHandler} />\n                        \n                        {/* Manual */}\n                    <Form.Input name=\"phone\" label='Phone' placeholder='(xxx)-xxx-xxxx' value={this.state.phone} onChange={this.localOnChangeHandler}/>\n                   \n                    <Divider/>\n                    <h2>Billing Info:</h2>\n                    <Form.Group unstackable widths={3}>\n                        <Form.Input name=\"creditCardNum\" label='Credit Card Number' placeholder='####-####-####-####' value={this.state.creditCardNum} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"expiration\" label='Expiration' placeholder='MM/YY' value={this.state.expiration} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"ccv\" label='CCV' placeholder='CCV' value={this.state.ccv} onChange={this.localOnChangeHandler} />\n                    </Form.Group>\n\n\n                    <Form.Checkbox label='I agree to the Terms and Conditions' />\n                    \n                       <Button type='submit'> Place your order</Button>\n                  \n                </Form>\n                        </>\n                    )\n\n\n                }}/>\n            </Switch>\n\n            </>\n        ) \n    }\n}\n\nexport default Checkout;","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/Cart.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductPage.js",["77"],"import '../App.css';\nimport React, { Component } from 'react'\nimport Header from './Header'\nimport Login from '../Auth/Login'\nimport Signup from '../Auth/Signup'\nimport Cart from '../Containers/Cart'\nimport ProductContainer from '../Containers/ProductContainer'\nimport { NavLink, Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport {  Icon, Button } from 'semantic-ui-react'\n\nclass ProductPage extends Component {\n\n    state = {\n        cartItems: [],\n        current_user: null,\n        current_cart: null\n    }\n\n    // currentUserCart = () =>{\n        \n    // }\n\n    addingCartProducts = (product) => {\n        // \n        fetch(\"http://localhost:3000/api/v1/cart_products\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                product_id: product.id,\n                cart_id: this.state.current_cart.id\n            })\n        })\n        .then(r => r.json())\n        .then( newCartProduct => this.setState({ cartItems: [...this.state.cartItems, newCartProduct]}))\n    }\n\n    foundCart = () => {\n        let thisCart = this.state.current_user.carts.find(cartObj => cartObj.history === false)\n        // debugger\n        if (thisCart){\n            \n            this.setState(prevState=>({\n                current_cart: thisCart\n\n            }), () =>  this.fetchCartProducts())\n           \n        } else {\n            fetch(\"http://localhost:3000/api/v1/carts\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    'user_id': this.state.current_user.id\n                })\n            })\n            .then(r => r.json())\n            .then(data => {\n                let copiedUser = {...this.state.current_user}\n                copiedUser.carts.push(data)\n                this.setState(prevState=>({\n            \n                current_cart: data,\n                current_user: copiedUser\n\n            }))})\n            .catch(console.log)\n        }\n    }\n\n    fetchCartProducts = () =>{\n        fetch(\"http://localhost:3000/api/v1/cart_products\")\n        .then(r => r.json())\n        .then(data => {\n            let thisUserProducts = data.filter(dataObj => dataObj.cart.user_id === this.state.current_user.id && dataObj.cart.history === false)\n            // \n            this.setState({ cartItems: thisUserProducts})\n        })\n    }\n\n    componentDidMount = () => {\n        const token = localStorage.getItem('token')\n\n        fetch(\"http://localhost:3000/api/v1/profile\", {\n            method: 'GET',\n            headers: {Authorization: `Bearer ${token}`}\n        })\n        .then(r=>r.json())\n        .then(data => {\n            // \n            if(data.user){\n                this.setState(prevState=> ({\n                current_user: data.user,\n                current_cart:  data.user.carts[0]\n                }), ()=>{\n                    if (localStorage.getItem('token')){\n                        this.fetchCartProducts()\n            \n                    }\n                })\n            }\n        })\n    }\n\n    updateQuantityHandler = (cartProduct, updatedQuantity) => {\n        console.log(\"testing\", cartProduct, updatedQuantity) \n        \n        if(updatedQuantity >= 1 && updatedQuantity <= 4){\n            fetch(`http://localhost:3000/api/v1/cart_products/${cartProduct.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({ quantity: updatedQuantity })\n            })\n            .then(r => r.json())\n            .then(newItem => {\n                let copiedArray = [...this.state.cartItems]\n                let oldObject = copiedArray.findIndex(itemObj => itemObj.id === newItem.id )\n                copiedArray[oldObject] = newItem\n                this.setState({ cartItems: copiedArray})\n            })\n            // console.log(\"not being warned:\", updatedQuantity)\n        }\n    }\n\n    loginSubmitHandler = (userInfo) =>{\n        // console.log(\"in pp app\", userInfo)\n\n        fetch(\"http://localhost:3000/api/v1/login\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({user: userInfo})\n        })\n        .then(r => r.json())\n        .then(data => {\n            // \n            if (data.user){\n                this.setState(prevState=> ({\n                    current_user: data.user\n                }), () =>{\n                    this.foundCart()\n                    \n                    console.log(this.state.current_user)\n                })\n                \n                localStorage.setItem(\"token\", data.jwt)\n                this.props.history.push('/products')\n                return\n            }\n            // console.log(data)\n        })\n        .catch(console.log)\n    }\n\n    logoutHandler = (e) =>{\n        e.preventDefault()\n        localStorage.removeItem('token')\n        this.setState(prevState=>({\n            current_user: null,\n            current_cart: null,\n            cartItems: []\n        }))\n    }\n\n    deleteCartProductHandler = (object) => {\n        fetch(`http://localhost:3000/api/v1/cart_products/${object.id}`, {\n            method: \"DELETE\"\n        })\n        .then(r => r.json())\n        .then((nothing) => {\n            let copiedArray = [...this.state.cartItems]\n            let newList = copiedArray.filter(cartP => cartP.id !== object.id)\n            this.setState({ cartItems: newList})\n        })\n        .catch(console.log)\n    }\n\n    checkoutHandler = (checkoutObj) => {\n        // console.log(\"purchased\", checkoutObj, this.state.current_cart.id, this.state.current_user)\n    \n        fetch(`http://localhost:3000/api/v1/carts/${this.state.current_cart.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({ history: true})\n        })\n        .then(r => r.json())\n        .then(updatedCart => {\n            let copiedUser = {...this.state.current_user}\n            let cartIndex = copiedUser.carts.findIndex(cart => cart.id === updatedCart.id)\n            copiedUser.carts[cartIndex] = updatedCart\n            // debugger\n            this.setState({ \n                current_cart:null,\n                cartItems: [],\n                current_user: copiedUser\n            \n            }, () => {\n                this.foundCart()\n\n            })\n        })\n        .catch(console.log)\n\n\n        this.props.history.push(\"/cart/checkout/confirmation\")\n    }\n\n    render(){\n        // console.log(this.props)\n        return (\n        <>  \n            <Header />\n            {/* <Login />  */}\n\n            <NavLink to=\"/products\">\n                Sunglasses\n            </NavLink>\n\n            <br></br>\n            {localStorage.getItem('token') ? \n            <>\n            <button className=\"logout\" onClick={this.logoutHandler}>Log Out</button>\n            <br></br>\n            <NavLink to=\"/cart\">\n                {/* <button>Cart</button> */}\n                <Button animated='vertical'>\n                  <Button.Content hidden>{this.state.cartItems.map(cartP => cartP.quantity).reduce((a, b)=> a + b, 0)}</Button.Content>\n                  <Button.Content visible>\n                      <Icon name='shop' />\n                  </Button.Content>\n              </Button>\n            </NavLink>\n            </>\n            : \n            <>\n            <NavLink to=\"/login\">Log In</NavLink>\n            <br></br>\n            <NavLink to=\"/signup\">Sign up</NavLink>\n            <br></br>\n            {/* <Signup />  */}\n            </>\n            }\n\n            \n\n                <Switch>\n                    <Route path=\"/signup\" render={()=> <Signup/>} />\n                    <Route path=\"/login\" render={()=> <Login loginSubmitHandler={this.loginSubmitHandler}/>} />\n                   \n                   {this.state.current_user !== null ? \n                   <Route path=\"/cart\" render={() => <Cart current_user={this.state.current_user} cartItems={this.state.cartItems} updateQuantityHandler={this.updateQuantityHandler}  deleteCartProductHandler={ this.deleteCartProductHandler} checkoutHandler={this.checkoutHandler}/>}/> \n                   : \n                   null\n               }\n                   \n                   \n                   <Route path=\"/products\" render={() => <ProductContainer  addingCartProducts={ this.addingCartProducts} />}/>\n                </Switch>\n        </>\n        )\n    }\n}\n\nexport default withRouter(ProductPage)","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Confirmation.js",["78"],"import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Item } from 'semantic-ui-react'\n\nexport default class Confirmation extends Component {\n\n    \n\n\n    render() {\n        console.log(this.props.cartItems)\n        return (\n\n            <>\n                <h2 style={{\"textAlign\": \"center\"}}>{this.props.current_user.first_name +\" \"+ this.props.current_user.last_name} Thank You for Shopping with us!!! 💸</h2>\n                <NavLink to=\"/products\"> \n                    <button>Continue Shopping</button>\n                </NavLink>\n            </>\n        )\n    }\n}\n","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Signup.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/index.js",[],["79","80"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductInfo.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Product.js",["81"],"import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Card, Icon, Image, Button } from 'semantic-ui-react'\n\nclass Product extends React.Component {\n    // console.log(this.props.product)\n\n    addToCartHandler = () => {\n    //   console.log(\"clicked\", this.props.product)\n      this.props.addingCartProducts(this.props.product)\n    }\n\n    // localClickHandler = () =>{\n    //     console.log(\"clicked\")\n\n    //     <NavLink to={`/products/${this.props.product.id}`}></NavLink>\n    // }\n\n    render(){\n        // console.log(this.props.product)\n      return (\n          <Card>\n              <NavLink to={`/products/${this.props.product.id}`}>\n                  <Card>\n                  <Image onClick={this.localClickHandler} src={this.props.product.image} wrapped ui={false} />\n\n                  </Card>\n                </NavLink>\n              \n              <Card.Content>\n              <Card.Header>{this.props.product.name}</Card.Header>\n              <Card.Meta>\n                  <span className='date'>${this.props.product.price}</span>\n              </Card.Meta>\n              <Card.Description>\n                  {this.props.product.description}\n              </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                {localStorage.getItem('token') ? \n              <Button onClick={this.addToCartHandler} color=\"orange\" >\n                  purchase\n              </Button>\n                \n                : \n                <>\n                <NavLink to=\"/login\">Login </NavLink>\n                or \n                <NavLink to=\"/signup\"> Sign up </NavLink>\n                to shop\n                </>\n                }\n              </Card.Content>\n          </Card>\n      )\n\n    }\n}\n\nexport default Product; ",["82","83"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/FilterByBrand.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Header.js",[],{"ruleId":"84","severity":1,"message":"85","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"84","severity":1,"message":"94","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":17},{"ruleId":"84","severity":1,"message":"95","line":3,"column":34,"nodeType":"86","messageId":"87","endLine":3,"endColumn":42},{"ruleId":"84","severity":1,"message":"95","line":8,"column":46,"nodeType":"86","messageId":"87","endLine":8,"endColumn":54},{"ruleId":"84","severity":1,"message":"96","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"88","replacedBy":"97"},{"ruleId":"90","replacedBy":"98"},{"ruleId":"84","severity":1,"message":"99","line":4,"column":16,"nodeType":"86","messageId":"87","endLine":4,"endColumn":20},{"ruleId":"88","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"'NavLink' is defined but never used.","'Redirect' is defined but never used.","'Item' is defined but never used.",["102"],["103"],"'Icon' is defined but never used.",["102"],["103"],"no-global-assign","no-unsafe-negation"]