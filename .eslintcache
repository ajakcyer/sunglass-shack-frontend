[{"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/App.js":"1","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Login.js":"2","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/ProductContainer.js":"3","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Search.js":"4","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/CartProduct.js":"5","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Checkout.js":"6","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/Cart.js":"7","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductPage.js":"8","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Confirmation.js":"9","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Signup.js":"10","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/index.js":"11","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductInfo.js":"12","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Product.js":"13","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/FilterByBrand.js":"14","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Header.js":"15","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/reportWebVitals.js":"16"},{"size":597,"mtime":1606609594169,"results":"17","hashOfConfig":"18"},{"size":1171,"mtime":1606789072178,"results":"19","hashOfConfig":"18"},{"size":3431,"mtime":1607011312513,"results":"20","hashOfConfig":"18"},{"size":274,"mtime":1606521586908,"results":"21","hashOfConfig":"18"},{"size":2404,"mtime":1607010436148,"results":"22","hashOfConfig":"18"},{"size":4517,"mtime":1606964474546,"results":"23","hashOfConfig":"18"},{"size":3046,"mtime":1606956701035,"results":"24","hashOfConfig":"18"},{"size":12610,"mtime":1606964611763,"results":"25","hashOfConfig":"18"},{"size":605,"mtime":1606956701032,"results":"26","hashOfConfig":"18"},{"size":2455,"mtime":1607011174246,"results":"27","hashOfConfig":"18"},{"size":500,"mtime":1606336510166,"results":"28","hashOfConfig":"18"},{"size":1285,"mtime":1607010180879,"results":"29","hashOfConfig":"18"},{"size":1751,"mtime":1606964937797,"results":"30","hashOfConfig":"18"},{"size":1010,"mtime":1606763339657,"results":"31","hashOfConfig":"18"},{"size":203,"mtime":1606340022217,"results":"32","hashOfConfig":"18"},{"size":362,"mtime":1606336510166,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xac7ag",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/App.js",["75"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Login.js",[],["76","77"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/ProductContainer.js",["78","79"],"import React, { Component } from 'react'\nimport Product from '../Components/Product'\nimport Search from '../Components/Search'\nimport FilterByBrand from '../Components/FilterByBrand'\nimport 'semantic-ui-css/semantic.min.css'\nimport {Grid, Advertisement } from 'semantic-ui-react'\nimport { Route, Switch } from 'react-router-dom'\nimport ProductInfo from '../Components/ProductInfo'\n\n\n\nclass ProductContainer extends Component{\n\n    state = {\n        products: [],\n        searchValue: \"\",\n        selectedBrand: \"\"\n        \n    }\n\n    componentDidMount = () =>{\n        fetch(\"http://localhost:3000/api/v1/products\")\n        .then(r => r.json())\n        .then(data => this.setState(prevState=>({\n            products: data\n        })))\n    }\n\n    filteredProducts = () => {\n        return this.filteredProductsByBrand().filter(productObj => productObj.name.toLowerCase().includes(this.state.searchValue.toLowerCase()) )\n    }\n\n    renderProducts = () =>{\n        return this.filteredProducts().map(product => <Grid.Column key={product.id}><Product key={product.id} product={product}  addingCartProducts={this.props.addingCartProducts} /></Grid.Column>)\n    }\n\n    brandOnChange = (e) => {\n        this.setState({ selectedBrand: e.target.value})\n    }\n\n    filteredProductsByBrand = () => {\n        return this.state.products.filter(product_obj => product_obj.brand.name.includes(this.state.selectedBrand))\n    }\n\n    searchHandler = (e) => {\n        this.setState({ searchValue: e.target.value})\n    }\n\n    render(){\n        // console.log(this.filteredProductsByBrand())\n        return (\n            <>\n            {/* <Advertisement as=\"img\"unit='billboard' centered test='Billboard' />  */}\n           \n                {this.state.products.length === 0 ? \n                \n                <h1 className=\"loading\">Loading products...</h1>\n                \n                : \n                    <>\n                        <Switch>\n                            <Route path=\"/products/:id\" render={({match})=> {\n                                let urlId = parseInt(match.params.id)\n                                let foundProduct = this.state.products.find(product=> product.id === urlId)\n                                return <ProductInfo product={foundProduct} addingCartProducts={this.props.addingCartProducts} />\n\n                            }}/>\n                            <Route path=\"/products\" render={()=> (\n                                <>\n                                    <img className=\"ad-image\" src=\"https://slack-imgs.com/?c=1&o1=ro&url=https%3A%2F%2Fmadmartech.com%2Fwp-content%2Fuploads%2F2019%2F05%2F970x250-1.png\" />\n                                    <Search searchValue={this.searchValue} searchHandler={this.searchHandler}/>\n                                    <br></br>\n                                    <br></br>\n                                    <FilterByBrand  brandOnChange={this.brandOnChange} />\n                                    <br></br>\n                                    <br></br>\n\n                                    <Grid relaxed centered container columns={4}>\n                                        {this.renderProducts()}\n                                    </Grid>\n                                </>\n                            )}/>\n                        </Switch>\n                    </>\n                }\n            </>\n        )\n    }\n}\n\nexport default ProductContainer;","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Search.js",[],["80","81"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/CartProduct.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Checkout.js",["82","83"],"import React from 'react'\nimport { Form, Button, Divider } from 'semantic-ui-react'\nimport { NavLink, Route, Switch, Redirect} from 'react-router-dom'\nimport Confirmation from './Confirmation'\n\n\nclass Checkout extends React.Component {\n\n    state = {\n        firstName: this.props.current_user.first_name,\n        lastName: this.props.current_user.last_name,\n        address: this.props.current_user.address,\n        address2: this.props.current_user.address2,\n        city: this.props.current_user.city,\n        state: this.props.current_user.state,\n        zipCode: this.props.current_user.zipcode,\n        email: this.props.current_user.email,\n        phone: \"\",\n        creditCardNum: \"\",\n        expiration: \"\",\n        ccv: \"\"\n    }\n\n    localOnChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    localSubmitHandler = (e) => {\n        e.preventDefault()\n        let stateObjectValues = Object.values(this.state)\n        let filteredValues = stateObjectValues.filter(value => value === \"N/A\" || value.length < 1)\n        if(filteredValues.length === 0){\n            \n            this.props.updatedUserInfoCheckout(this.state)\n            this.props.checkoutHandler()\n        } else {\n            alert(\"Every field must be completed ‼️\")\n        }\n    }\n\n    render (){\n        // console.log(this.props.current_user)\n        return(\n        \n            <>\n            <Switch>\n                <Route path=\"/cart/checkout/confirmation\" render={() => <Confirmation current_user={this.props.current_user} />}/>\n                <Route path=\"/cart/checkout\" render={() => {\n                    return(\n\n                        <>\n\n                <Form onSubmit={this.localSubmitHandler} action=\"/cart/checkout/\" >\n                    <h2>User Info:</h2>\n                    <Form.Group unstackable widths={2}>\n                        <Form.Input name=\"firstName\" label='First name' placeholder='First name' value={this.state.firstName} />\n                        <Form.Input name=\"lastName\" label='Last name' placeholder='Last name' value={this.state.lastName} />\n                    </Form.Group>\n\n                    <Form.Group unstackable widths={2}>\n                        <Form.Input name=\"address\" label='Address' placeholder='Address' value={this.state.address} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"address2\" label='Address 2' placeholder='Apt# (optionial)' value={this.state.address2} onChange={this.localOnChangeHandler}/>\n                    </Form.Group>\n\n                    <Form.Group unstackable widths=\"equal\">\n                        <Form.Input name=\"city\" label='City' placeholder='City' value={this.state.city} onChange={this.localOnChangeHandler} />\n                        <Form.Input name=\"state\" label='State' placeholder='State' value={this.state.state} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"zipCode\" label='Zip Code' placeholder='Zip Code' value={this.state.zipCode} onChange={this.localOnChangeHandler} />\n                    </Form.Group>\n\n                    <Form.Input name=\"email\" label='Email' placeholder='Email' value={this.state.email} onChange={this.localOnChangeHandler} />\n                        \n                        {/* Manual */}\n                    <Form.Input name=\"phone\" label='Phone' placeholder='(xxx)-xxx-xxxx' value={this.state.phone} onChange={this.localOnChangeHandler}/>\n                   \n                    <Divider/>\n                    <h2>Billing Info:</h2>\n                    <Form.Group unstackable widths={3}>\n                        <Form.Input name=\"creditCardNum\" label='Credit Card Number' placeholder='####-####-####-####' value={this.state.creditCardNum} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"expiration\" label='Expiration' placeholder='MM/YY' value={this.state.expiration} onChange={this.localOnChangeHandler}/>\n                        <Form.Input name=\"ccv\" label='CCV' placeholder='CCV' value={this.state.ccv} onChange={this.localOnChangeHandler} />\n                    </Form.Group>\n\n\n                    <Form.Checkbox label='I agree to the Terms and Conditions' />\n                    \n                       <Button type='submit'> Place your order</Button>\n                  \n                </Form>\n                        </>\n                    )\n\n\n                }}/>\n            </Switch>\n\n            </>\n        ) \n    }\n}\n\nexport default Checkout;","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Containers/Cart.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductPage.js",["84"],"import '../App.css';\nimport React, { Component } from 'react'\nimport Header from './Header'\nimport Login from '../Auth/Login'\nimport Signup from '../Auth/Signup'\nimport Cart from '../Containers/Cart'\nimport ProductContainer from '../Containers/ProductContainer'\nimport { NavLink, Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport {  Icon, Button, Menu} from 'semantic-ui-react'\nimport AboutUs from './AboutUs'\n\nclass ProductPage extends Component {\n\n    state = {\n        cartItems: [],\n        current_user: null,\n        current_cart: null\n    }\n\n    addingCartProducts = (product) => {\n        const token = localStorage.getItem('token')\n        \n        fetch(\"http://localhost:3000/api/v1/cart_products\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                product_id: product.id,\n                cart_id: this.state.current_cart.id\n            })\n        })\n        .then(r => r.json())\n        .then( newCartProduct => this.setState({ cartItems: [...this.state.cartItems, newCartProduct]}))\n    }\n\n    foundCart = () => {\n        let thisCart = this.state.current_user.carts.find(cartObj => cartObj.history === false)\n        // debugger\n        if (thisCart){\n            \n            this.setState(prevState=>({\n                current_cart: thisCart\n\n            }), () =>  this.fetchCartProducts())\n           \n        } else {\n            const token = localStorage.getItem('token')\n            fetch(\"http://localhost:3000/api/v1/carts\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    \"Authorization\": `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    'user_id': this.state.current_user.id\n                })\n            })\n            .then(r => r.json())\n            .then(data => {\n                let copiedUser = {...this.state.current_user}\n                copiedUser.carts.push(data)\n                this.setState(prevState=>({\n            \n                current_cart: data,\n                current_user: copiedUser\n\n            }))})\n            .catch(console.log)\n        }\n    }\n\n    fetchCartProducts = () =>{\n        const token = localStorage.getItem('token')\n        fetch(\"http://localhost:3000/api/v1/cart_products\",{\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(r => r.json())\n        .then(data => {\n            let thisUserProducts = data.filter(dataObj => dataObj.cart.user_id === this.state.current_user.id && dataObj.cart.history === false)\n            // \n            this.setState({ cartItems: thisUserProducts})\n        })\n    }\n\n    componentDidMount = () => {\n        const token = localStorage.getItem('token')\n\n        fetch(\"http://localhost:3000/api/v1/profile\", {\n            method: 'GET',\n            headers: {Authorization: `Bearer ${token}`}\n        })\n        .then(r=>r.json())\n        .then(data => {\n            // \n            if(data.user){\n                this.setState(prevState=> ({\n                current_user: data.user,\n                current_cart:  data.user.carts[0]\n                }), ()=>{\n                    if (localStorage.getItem('token')){\n                        this.fetchCartProducts()\n            \n                    }\n                })\n            }\n        })\n    }\n\n    updateQuantityHandler = (cartProduct, updatedQuantity) => {\n        console.log(\"testing\", cartProduct, updatedQuantity) \n        \n        if(updatedQuantity >= 1 && updatedQuantity <= 4){\n            const token = localStorage.getItem('token')\n            fetch(`http://localhost:3000/api/v1/cart_products/${cartProduct.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                body: JSON.stringify({ quantity: updatedQuantity })\n            })\n            .then(r => r.json())\n            .then(newItem => {\n                let copiedArray = [...this.state.cartItems]\n                let oldObject = copiedArray.findIndex(itemObj => itemObj.id === newItem.id )\n                copiedArray[oldObject] = newItem\n                this.setState({ cartItems: copiedArray})\n            })\n            // console.log(\"not being warned:\", updatedQuantity)\n        }\n    }\n\n    loginSubmitHandler = (userInfo) =>{\n        // console.log(\"in pp app\", userInfo)\n        const token = localStorage.getItem('token')\n        fetch(\"http://localhost:3000/api/v1/login\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({user: userInfo})\n        })\n        .then(r => r.json())\n        .then(data => {\n            // \n            if (data.user){\n                this.setState(prevState=> ({\n                    current_user: data.user\n                }), () =>{\n                    this.foundCart()\n                    \n                    console.log(this.state.current_user)\n                })\n                \n                localStorage.setItem(\"token\", data.jwt)\n                this.props.history.push('/products')\n                return\n            }\n            // console.log(data)\n        })\n        .catch(console.log)\n    }\n\n    logoutHandler = (e) =>{\n        e.preventDefault()\n        localStorage.removeItem('token')\n        this.setState(prevState=>({\n            current_user: null,\n            current_cart: null,\n            cartItems: []\n        }))\n    }\n\n    deleteCartProductHandler = (object) => {\n        const token = localStorage.getItem('token')\n        fetch(`http://localhost:3000/api/v1/cart_products/${object.id}`, {\n            method: \"DELETE\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(r => r.json())\n        .then((nothing) => {\n            let copiedArray = [...this.state.cartItems]\n            let newList = copiedArray.filter(cartP => cartP.id !== object.id)\n            this.setState({ cartItems: newList})\n        })\n        .catch(console.log)\n    }\n\n    checkoutHandler = () => {\n        // console.log(\"purchased\", checkoutObj, this.state.current_cart.id, this.state.current_user)\n        const token = localStorage.getItem('token')\n        fetch(`http://localhost:3000/api/v1/carts/${this.state.current_cart.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({ history: true})\n        })\n        .then(r => r.json())\n        .then(updatedCart => {\n            let copiedUser = {...this.state.current_user}\n            let cartIndex = copiedUser.carts.findIndex(cart => cart.id === updatedCart.id)\n            copiedUser.carts[cartIndex] = updatedCart\n            // debugger\n            this.setState({ \n                current_cart:null,\n                cartItems: [],\n                current_user: copiedUser\n            }, () => {\n                this.foundCart()\n            })\n        })\n        .catch(console.log)\n        this.props.history.push(\"/cart/checkout/confirmation\")\n    }\n\n    signUpSubmitHandler = (userObj) => {\n        console.log(\"created!\", userObj, this.state.current_user)\n        const token = localStorage.getItem('token')\n        fetch(\"http://localhost:3000/api/v1/users\", {   \n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                first_name: userObj.firstName,\n                last_name: userObj.lastName,\n                username: userObj.userName,\n                age: userObj.age,\n                email: userObj.email,\n                password: userObj.password1\n            })\n        })\n        .then(r => r.json())\n        .then(data => {\n            if (data.user){\n                this.setState(prevState=> ({\n                    current_user: data.user\n                }), () =>{\n                    this.foundCart()\n                    console.log(this.state.current_user)\n                })\n\n                localStorage.setItem(\"token\", data.jwt)\n                this.props.history.push('/products')\n                return\n            }\n        })\n        .catch(console.log)\n    }\n\n    updatedUserInfoCheckout = (userState) => {\n        console.log(\"updated\", this.state.current_user, userState)\n        const token = localStorage.getItem('token')\n\n        fetch(`http://localhost:3000/api/v1/users/${this.state.current_user.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n\n                first_name: userState.firstName ,\n                last_name: userState.lastName,\n                address: userState.address,\n                address2: userState.address2,\n                city: userState.city,\n                state: userState.state,\n                zipcode: userState.zipCode,\n                email: userState.email\n            })\n        })\n        .then(r => r.json())\n        .then(data => {\n            if (data){\n                this.setState(prevState=> ({\n                    current_user: data\n                }))\n            }\n        })\n        .catch(console.log)\n    }\n\n\n    render(){\n        // console.log(this.props)\n        return (\n        <>  \n            <Header />\n            {/* <Login />  */}\n\n            <Menu pointing secondary>\n          <Menu.Item\n           children={<NavLink to=\"/products\" className=\"sunglass-link\">\n           Sunglasses\n       </NavLink>}\n          />\n          <Menu.Item\n            children={<NavLink to=\"/aboutus\" className=\"aboutus-link\">\n            About Us\n                    </NavLink>}\n          />\n          \n          <Menu.Menu position='right'>\n          {localStorage.getItem('token') ? \n            <>\n                <Menu.Item children={<button className=\"logout\" onClick={this.logoutHandler}>Log Out</button>} />\n\n                <Menu.Item children={ <NavLink to=\"/cart\">\n                \n                    <Button animated='vertical'>\n                    <Button.Content hidden>{this.state.cartItems.map(cartP => cartP.quantity).reduce((a, b)=> a + b, 0)}</Button.Content>\n                    <Button.Content visible>\n                      <Icon name='shop' />\n                  </Button.Content>\n              </Button>\n            </NavLink>}/>\n            \n            </>\n            : \n            <>\n            <Menu.Item children={ <NavLink to=\"/login\">Log In</NavLink> } />\n            <Menu.Item children={ <NavLink to=\"/signup\">Sign up</NavLink>} />\n           \n            </>\n            }\n          </Menu.Menu>\n             </Menu>\n                <Switch>\n                    <Route path=\"/signup\" render={()=> <Signup  signUpSubmitHandler={this.signUpSubmitHandler} />} />\n                    <Route path=\"/login\" render={()=> <Login loginSubmitHandler={this.loginSubmitHandler}/>} />\n                    \n                   {this.state.current_user !== null ? \n                   <Route path=\"/cart\" render={() => <Cart current_user={this.state.current_user} cartItems={this.state.cartItems} updateQuantityHandler={this.updateQuantityHandler}  deleteCartProductHandler={ this.deleteCartProductHandler} checkoutHandler={this.checkoutHandler} updatedUserInfoCheckout={this.updatedUserInfoCheckout}/>}/> \n                   : \n                   null\n               }\n                    <Route path=\"/aboutus\" render={() => <AboutUs />}/>\n                   <Route path=\"/products\" render={() => <ProductContainer  addingCartProducts={ this.addingCartProducts} />}/>\n                </Switch>\n        </>\n        )\n    }\n}\n\nexport default withRouter(ProductPage)","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Confirmation.js",["85"],"import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Item } from 'semantic-ui-react'\n\nexport default class Confirmation extends Component {\n\n    render() {\n        console.log(this.props.current_user)\n        return (\n\n            <>\n                <h2 style={{\"textAlign\": \"center\"}}>{this.props.current_user.first_name +\" \"+ this.props.current_user.last_name} Thank You for Shopping with us!!! 💸</h2>\n                <NavLink to=\"/products\"> \n                    <button>Continue Shopping</button>\n                </NavLink>\n            </>\n        )\n    }\n}\n","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Auth/Signup.js",["86"],"import React, { Component } from 'react'\nimport { Form, Button, Divider } from 'semantic-ui-react'\n\nexport default class Signup extends Component {\n\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        age: \"\",\n        userName: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n        clicked: false\n    }\n\n    localOnChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    localSubmitHandler = (e) => {\n        e.preventDefault()\n        if (this.state.password1 === this.state.password2){\n            this.setState({clicked: true})\n            this.props.signUpSubmitHandler(this.state)\n        }else {\n            alert(\"Passwords do not match, please try again!\")\n        }\n    }\n\n    render() {\n        return (\n            <>\n            \n            <Form onSubmit={this.localSubmitHandler} action=\"/cart/checkout/\" >\n                <h2>User Info:</h2>\n                <Form.Group unstackable widths={2}>\n                    <Form.Input name=\"firstName\" label='First Name' placeholder='First Name' value={this.state.firstName} onChange={this.localOnChangeHandler}/>\n                    <Form.Input name=\"lastName\" label='Last Name' placeholder='Last Name' value={this.state.lastName} onChange={this.localOnChangeHandler}/>\n                    <Form.Input name=\"age\" type=\"number\" label='Age' placeholder='Age' value={this.state.age} onChange={this.localOnChangeHandler}/>\n                </Form.Group>\n\n                <Form.Group unstackable widths={2}>\n                    <Form.Input name=\"userName\" label='Username' placeholder='Username' value={this.state.userName} onChange={this.localOnChangeHandler}/>\n                </Form.Group>\n\n                    \n                    {/* Manual */}\n                <Form.Input name=\"email\" label='Email' placeholder='Email Address' value={this.state.email} onChange={this.localOnChangeHandler}/>\n                <Form.Input name=\"password1\" type=\"password\" label='Password' placeholder='Password' value={this.state.password} onChange={this.localOnChangeHandler}/>\n                <Form.Input name=\"password2\" type=\"password\" label='Confirm Password' placeholder='Password' value={this.state.password} onChange={this.localOnChangeHandler}/>\n               {this.state.clicked ?  <Button loading >Create Account!</Button> : <Button>Create Account!</Button>}\n                \n            </Form>\n            </>\n        )\n    }\n}\n","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/index.js",[],["87","88"],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/ProductInfo.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Product.js",["89","90","91","92"],"import React from 'react'\nimport { NavLink, Switch } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Card, Icon, Image, Button } from 'semantic-ui-react'\n\nclass Product extends React.Component {\n   \n  state = {\n    flipped: false\n  }\n\n    addToCartHandler = () => {\n    //   console.log(\"clicked\", this.props.product)\n      this.props.addingCartProducts(this.props.product)\n      this.setState({ flipped: true})\n    }\n\n    render(){\n        // console.log(this.props.product)\n      return (\n          <Card>\n              <NavLink to={`/products/${this.props.product.id}`}>\n                  <Card>\n                  <img className=\"product-image\" onClick={this.localClickHandler} src={this.props.product.image} />\n\n                  </Card>\n                </NavLink>\n              \n              <Card.Content>\n              <Card.Header>{this.props.product.name}</Card.Header>\n              <Card.Meta>\n                  <span className='date'>${this.props.product.price}</span>\n              </Card.Meta>\n              <Card.Description>\n                  {this.props.product.brand.name}\n              </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                {localStorage.getItem('token') ? \n              <Button onClick={this.addToCartHandler} color=\"orange\" >\n                {this.state.flipped ? \"In Cart!\" : \"Add to Cart\"}\n              </Button>\n                : \n                <>\n                <NavLink to=\"/login\">Login </NavLink>\n                or \n                <NavLink to=\"/signup\"> Sign up </NavLink>\n                to shop\n                </>\n                }\n              </Card.Content>\n          </Card>\n      )\n\n    }\n}\n\nexport default Product; ","/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/FilterByBrand.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/Components/Header.js",[],"/Users/bryamvicente/dev/code/mod4/SunGlass-Shack/sunglass-shack-frontend/src/reportWebVitals.js",[],{"ruleId":"93","severity":1,"message":"94","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":12},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":6,"column":15,"nodeType":"95","messageId":"96","endLine":6,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":70,"column":37,"nodeType":"104","endLine":70,"endColumn":189},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","replacedBy":"106"},{"ruleId":"93","severity":1,"message":"107","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":17},{"ruleId":"93","severity":1,"message":"108","line":3,"column":34,"nodeType":"95","messageId":"96","endLine":3,"endColumn":42},{"ruleId":"93","severity":1,"message":"108","line":8,"column":46,"nodeType":"95","messageId":"96","endLine":8,"endColumn":54},{"ruleId":"93","severity":1,"message":"109","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"110","line":2,"column":24,"nodeType":"95","messageId":"96","endLine":2,"endColumn":31},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"93","severity":1,"message":"113","line":2,"column":19,"nodeType":"95","messageId":"96","endLine":2,"endColumn":25},{"ruleId":"93","severity":1,"message":"114","line":4,"column":16,"nodeType":"95","messageId":"96","endLine":4,"endColumn":20},{"ruleId":"93","severity":1,"message":"115","line":4,"column":22,"nodeType":"95","messageId":"96","endLine":4,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":24,"column":19,"nodeType":"104","endLine":24,"endColumn":116},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'Advertisement' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["116"],["117"],"'NavLink' is defined but never used.","'Redirect' is defined but never used.","'Item' is defined but never used.","'Divider' is defined but never used.",["116"],["117"],"'Switch' is defined but never used.","'Icon' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]